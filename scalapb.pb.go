// Code generated by protoc-gen-go.
// source: scalapb.proto
// DO NOT EDIT!

/*
Package scalapb is a generated protocol buffer package.

It is generated from these files:
	scalapb.proto

It has these top-level messages:
	ScalaPbOptions
	MessageOptions
	FieldOptions
*/
package scalapb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/protoc-gen-go/descriptor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ScalaPbOptions struct {
	// If set then it overrides the java_package and package.
	PackageName *string `protobuf:"bytes,1,opt,name=package_name,json=packageName" json:"package_name,omitempty"`
	// If true, the compiler does not append the proto base file name
	// into the generated package name. If false (the default), the
	// generated scala package name is the package_name.basename where
	// basename is the proto file name without the .proto extension.
	FlatPackage *bool `protobuf:"varint,2,opt,name=flat_package,json=flatPackage" json:"flat_package,omitempty"`
	// Adds the following imports at the top of the file (this is meant
	// to provide implicit TypeMappers)
	Import []string `protobuf:"bytes,3,rep,name=import" json:"import,omitempty"`
	// Text to add to the generated scala file.  This can be used only
	// when single_file is true.
	Preamble []string `protobuf:"bytes,4,rep,name=preamble" json:"preamble,omitempty"`
	// If true, all messages and enums (but not services) will be written
	// to a single Scala file.
	SingleFile *bool `protobuf:"varint,5,opt,name=single_file,json=singleFile" json:"single_file,omitempty"`
	// When this option is enabled, wrappers defined at
	// https://github.com/google/protobuf/blob/master/src/google/protobuf/wrappers.proto,
	// are mapped to an Option[T] where T is a primitive type.
	PrimitiveWrappers *bool  `protobuf:"varint,6,opt,name=primitive_wrappers,json=primitiveWrappers" json:"primitive_wrappers,omitempty"`
	XXX_unrecognized  []byte `json:"-"`
}

func (m *ScalaPbOptions) Reset()                    { *m = ScalaPbOptions{} }
func (m *ScalaPbOptions) String() string            { return proto.CompactTextString(m) }
func (*ScalaPbOptions) ProtoMessage()               {}
func (*ScalaPbOptions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ScalaPbOptions) GetPackageName() string {
	if m != nil && m.PackageName != nil {
		return *m.PackageName
	}
	return ""
}

func (m *ScalaPbOptions) GetFlatPackage() bool {
	if m != nil && m.FlatPackage != nil {
		return *m.FlatPackage
	}
	return false
}

func (m *ScalaPbOptions) GetImport() []string {
	if m != nil {
		return m.Import
	}
	return nil
}

func (m *ScalaPbOptions) GetPreamble() []string {
	if m != nil {
		return m.Preamble
	}
	return nil
}

func (m *ScalaPbOptions) GetSingleFile() bool {
	if m != nil && m.SingleFile != nil {
		return *m.SingleFile
	}
	return false
}

func (m *ScalaPbOptions) GetPrimitiveWrappers() bool {
	if m != nil && m.PrimitiveWrappers != nil {
		return *m.PrimitiveWrappers
	}
	return false
}

type MessageOptions struct {
	// Additional classes and traits to mix in to the case class.
	Extends []string `protobuf:"bytes,1,rep,name=extends" json:"extends,omitempty"`
	// Additional classes and traits to mix in to the companion object.
	CompanionExtends []string `protobuf:"bytes,2,rep,name=companion_extends,json=companionExtends" json:"companion_extends,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *MessageOptions) Reset()                    { *m = MessageOptions{} }
func (m *MessageOptions) String() string            { return proto.CompactTextString(m) }
func (*MessageOptions) ProtoMessage()               {}
func (*MessageOptions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *MessageOptions) GetExtends() []string {
	if m != nil {
		return m.Extends
	}
	return nil
}

func (m *MessageOptions) GetCompanionExtends() []string {
	if m != nil {
		return m.CompanionExtends
	}
	return nil
}

type FieldOptions struct {
	Type             *string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *FieldOptions) Reset()                    { *m = FieldOptions{} }
func (m *FieldOptions) String() string            { return proto.CompactTextString(m) }
func (*FieldOptions) ProtoMessage()               {}
func (*FieldOptions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *FieldOptions) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

var E_Options = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FileOptions)(nil),
	ExtensionType: (*ScalaPbOptions)(nil),
	Field:         1020,
	Name:          "scalapb.options",
	Tag:           "bytes,1020,opt,name=options",
}

var E_Message = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MessageOptions)(nil),
	ExtensionType: (*MessageOptions)(nil),
	Field:         1020,
	Name:          "scalapb.message",
	Tag:           "bytes,1020,opt,name=message",
}

var E_Field = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*FieldOptions)(nil),
	Field:         1020,
	Name:          "scalapb.field",
	Tag:           "bytes,1020,opt,name=field",
}

func init() {
	proto.RegisterType((*ScalaPbOptions)(nil), "scalapb.ScalaPbOptions")
	proto.RegisterType((*MessageOptions)(nil), "scalapb.MessageOptions")
	proto.RegisterType((*FieldOptions)(nil), "scalapb.FieldOptions")
	proto.RegisterExtension(E_Options)
	proto.RegisterExtension(E_Message)
	proto.RegisterExtension(E_Field)
}

func init() { proto.RegisterFile("scalapb.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 374 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x51, 0x4d, 0x6b, 0xe3, 0x30,
	0x14, 0x24, 0x9f, 0xce, 0x3e, 0x67, 0xc3, 0x46, 0xb0, 0x59, 0x11, 0x76, 0x49, 0xd6, 0xa7, 0x85,
	0xa5, 0x0e, 0xf4, 0x98, 0x63, 0xa1, 0xb9, 0x94, 0xb6, 0xc1, 0x39, 0xe4, 0x68, 0x64, 0x5b, 0x0e,
	0xa2, 0xb6, 0x25, 0x24, 0xa5, 0x1f, 0x7f, 0xb5, 0xbf, 0xa5, 0x87, 0xca, 0x1f, 0x72, 0x1b, 0xd2,
	0x9b, 0xdf, 0xcc, 0xbc, 0xf1, 0x1b, 0x0d, 0x7c, 0x57, 0x31, 0xc9, 0x88, 0x88, 0x7c, 0x21, 0xb9,
	0xe6, 0xc8, 0x69, 0xc6, 0xf9, 0xf2, 0xc0, 0xf9, 0x21, 0xa3, 0xab, 0x0a, 0x8e, 0x8e, 0xe9, 0x2a,
	0xa1, 0x2a, 0x96, 0x4c, 0x68, 0x2e, 0x6b, 0xa9, 0xf7, 0xda, 0x81, 0xc9, 0xae, 0x54, 0x6f, 0xa3,
	0x7b, 0xa1, 0x19, 0x2f, 0x14, 0xfa, 0x0b, 0x63, 0x41, 0xe2, 0x07, 0x72, 0xa0, 0x61, 0x41, 0x72,
	0x8a, 0x3b, 0xcb, 0xce, 0xbf, 0x6f, 0x81, 0xdb, 0x60, 0x77, 0x06, 0x2a, 0x25, 0x69, 0x46, 0x74,
	0xd8, 0x60, 0xb8, 0x6b, 0x24, 0xa3, 0xc0, 0x2d, 0xb1, 0x6d, 0x0d, 0xa1, 0x19, 0x0c, 0x59, 0x2e,
	0xb8, 0xd4, 0xb8, 0xb7, 0xec, 0x99, 0xfd, 0x66, 0x42, 0x73, 0x18, 0x09, 0x49, 0x49, 0x1e, 0x65,
	0x14, 0xf7, 0x2b, 0xa6, 0x9d, 0xd1, 0x02, 0x5c, 0xc5, 0x0a, 0x73, 0x70, 0x98, 0x32, 0x43, 0x0f,
	0x2a, 0x57, 0xa8, 0xa1, 0x8d, 0x41, 0xd0, 0x05, 0x20, 0x21, 0x59, 0xce, 0x34, 0x7b, 0xa4, 0xe1,
	0x93, 0x24, 0x42, 0x50, 0xa9, 0xf0, 0xb0, 0xd2, 0x4d, 0x5b, 0x66, 0xdf, 0x10, 0xde, 0x1e, 0x26,
	0xb7, 0x54, 0x29, 0x73, 0x8e, 0xcd, 0x86, 0xc1, 0xa1, 0xcf, 0x9a, 0x16, 0x89, 0x32, 0xb1, 0xca,
	0x9f, 0xdb, 0x11, 0xfd, 0x87, 0x69, 0xcc, 0x73, 0x41, 0x0a, 0xa3, 0x0b, 0xad, 0xa6, 0x5b, 0x69,
	0x7e, 0xb4, 0xc4, 0x75, 0x8d, 0x7b, 0x1e, 0x8c, 0x37, 0x8c, 0x66, 0x89, 0xb5, 0x45, 0xd0, 0xd7,
	0x2f, 0xc2, 0x3e, 0x55, 0xf5, 0xbd, 0xde, 0x82, 0xc3, 0x1b, 0xfa, 0xb7, 0x5f, 0xf7, 0xe0, 0xdb,
	0x1e, 0xfc, 0x32, 0x4d, 0xb3, 0x8c, 0xdf, 0x1c, 0xb3, 0xe5, 0x5e, 0xfe, 0xf2, 0x6d, 0x89, 0xa7,
	0x7d, 0x04, 0xd6, 0x66, 0xbd, 0x03, 0x27, 0xaf, 0xe3, 0xa0, 0xc5, 0x99, 0xe3, 0x69, 0xd0, 0x73,
	0xd3, 0x53, 0x3e, 0xb0, 0x4e, 0xeb, 0x1b, 0x18, 0xa4, 0x65, 0x14, 0xf4, 0xe7, 0x8b, 0x23, 0x3f,
	0x22, 0x5a, 0xc3, 0x9f, 0xad, 0xe1, 0x67, 0x36, 0xa8, 0x3d, 0xae, 0x30, 0xcc, 0xcc, 0x5b, 0xf9,
	0x5a, 0x1e, 0x29, 0x89, 0x63, 0x2e, 0x13, 0xab, 0x7e, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x51, 0xea,
	0x48, 0xd4, 0xa2, 0x02, 0x00, 0x00,
}
